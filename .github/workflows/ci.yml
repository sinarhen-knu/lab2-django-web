name: Restaurant Manager CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: django_db_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DEBUG: True
      DJANGO_SECRET_KEY: test-secret-key-for-ci
      POSTGRES_DB: django_db_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install uv

      - name: Install Dependencies
        run: |
          python -m uv pip install -r requirements.txt

      - name: Run Migrations
        run: |
          cd django_project
          python manage.py migrate

      - name: Run Tests
        run: |
          cd django_project
          python -m pytest

      - name: Run Test Coverage
        run: |
          cd django_project
          python -m coverage run -m pytest
          python -m coverage report

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/restaurant-manager:latest

      - name: Deploy to Render
        run: |
          ENCODED_IMAGE_URL="docker.io%2F${{ secrets.DOCKER_HUB_USERNAME }}%2Frestaurant-manager%3Alatest"
          
          RENDER_DEPLOY_URL="${{ secrets.RENDER_DEPLOY_HOOK_URL }}&imgURL=${ENCODED_IMAGE_URL}"
          
          RESPONSE_FILE="deploy_response.json"
          HTTP_STATUS=$(curl -s -w "%{http_code}" -X POST "${RENDER_DEPLOY_URL}" -o $RESPONSE_FILE)
          echo "HTTP Status: $HTTP_STATUS"
          cat $RESPONSE_FILE
          
          if [[ $HTTP_STATUS -lt 200 || $HTTP_STATUS -ge 300 ]]; then
            echo "::error::Deployment failed with HTTP status $HTTP_STATUS"
            echo "::error::Response: $(cat $RESPONSE_FILE)"
            exit 1
          fi
          
          if grep -q "error\|badrequest" $RESPONSE_FILE; then
            echo "::error::Deployment API returned an error"
            echo "::error::Response: $(cat $RESPONSE_FILE)"
            exit 1
          fi
          
          echo "Deployment successfully triggered"
